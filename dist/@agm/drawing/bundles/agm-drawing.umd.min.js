!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("@agm/core"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@agm/drawing",["exports","@angular/core","rxjs","@agm/core","rxjs/operators"],t):t(((e=e||self).ngmaps=e.ngmaps||{},e.ngmaps.drawing={}),e.ng.core,e.rxjs,e.ngmaps.core,e.rxjs.operators)}(this,function(e,t,n,r,o){"use strict";function i(e,t,n,r){var o,i=arguments.length,p=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(p=(i<3?o(p):i>3?o(t,n,p):o(t,n))||p);return i>3&&p&&Object.defineProperty(t,n,p),p}function p(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function a(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),p=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)p.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return p}var s;(s=e.OverlayType||(e.OverlayType={})).CIRCLE="circle",s.MARKER="marker",s.POLYGONE="polygon",s.POLYLINE="polyline",s.RECTANGE="rectangle";var c=function(){function e(e){this._zone=e,this.circleComplete=new t.EventEmitter,this.markerComplete=new t.EventEmitter,this.overlayComplete=new t.EventEmitter,this.polygonComplete=new t.EventEmitter,this.polylineComplete=new t.EventEmitter,this.rectangleComplete=new t.EventEmitter,this.eventSubscriptions=[]}return e.prototype.setMap=function(e){google.maps.drawing||!t.isDevMode()?e&&!this.drawingManager?(this.drawingManager=new google.maps.drawing.DrawingManager({map:e,circleOptions:this.circleOptions,markerOptions:this.markerOptions,polygonOptions:this.polygonOptions,polylineOptions:this.polylineOptions,rectangeOptions:this.rectangeOptions,drawingControl:this.drawingControl,drawingControlOptions:this.drawingControlOptions,drawingMode:this.drawingMode}),this.initEvents(this.drawingManager)):!e&&this.drawingManager&&this.drawingManager.setMap(null):console.error("Cannot use drawing manager if drawing library is not loaded. To fix, add libraries: ['drawing'] to the lazyMapsAPILoaderConfig you passed to AgmCoreModule.forRoot")},e.prototype.initEvents=function(e){var t=this;this.eventSubscriptions.push(this.createMvcObservable("circlecomplete",e).subscribe(function(e){return t._zone.run(function(){return t.circleComplete.next(e)})})),this.eventSubscriptions.push(this.createMvcObservable("markercomplete",e).subscribe(function(e){return t._zone.run(function(){return t.markerComplete.next(e)})})),this.eventSubscriptions.push(this.createMvcObservable("polygoncomplete",e).subscribe(function(e){return t._zone.run(function(){return t.polygonComplete.next(e)})})),this.eventSubscriptions.push(this.createMvcObservable("polylinecomplete",e).subscribe(function(e){return t._zone.run(function(){return t.polylineComplete.next(e)})})),this.eventSubscriptions.push(this.createMvcObservable("overlaycomplete",e).subscribe(function(e){return t._zone.run(function(){return t.overlayComplete.next(e)})})),this.eventSubscriptions.push(this.createMvcObservable("rectanglecomplete",e).subscribe(function(e){return t._zone.run(function(){return t.rectangleComplete.next(e)})}))},e.prototype.createMvcObservable=function(e,t){return n.fromEventPattern(function(n){return t.addListener(e,function(e){return n.apply(null,[e])})},function(e,t){return t.remove()})},e.prototype.ngOnChanges=function(e){if(this.drawingManager){var t=Object.entries(e).map(function(e){var t=a(e,2);return[t[0],t[1].currentValue]}).reduce(function(e,t){var n=a(t,2),r=n[0],o=n[1];return e[r]=o,e},{});this.drawingManager.setOptions(t)}},e.prototype.ngOnDestroy=function(){this.eventSubscriptions.forEach(function(e){return e.unsubscribe()})},i([t.Input(),p("design:type",Boolean)],e.prototype,"drawingControl",void 0),i([t.Input(),p("design:type",String)],e.prototype,"drawingMode",void 0),i([t.Input(),p("design:type",Object)],e.prototype,"drawingControlOptions",void 0),i([t.Input(),p("design:type",Object)],e.prototype,"circleOptions",void 0),i([t.Input(),p("design:type",Object)],e.prototype,"markerOptions",void 0),i([t.Input(),p("design:type",Object)],e.prototype,"polygonOptions",void 0),i([t.Input(),p("design:type",Object)],e.prototype,"polylineOptions",void 0),i([t.Input(),p("design:type",Object)],e.prototype,"rectangeOptions",void 0),i([t.Output(),p("design:type",Object)],e.prototype,"circleComplete",void 0),i([t.Output(),p("design:type",Object)],e.prototype,"markerComplete",void 0),i([t.Output(),p("design:type",Object)],e.prototype,"overlayComplete",void 0),i([t.Output(),p("design:type",Object)],e.prototype,"polygonComplete",void 0),i([t.Output(),p("design:type",Object)],e.prototype,"polylineComplete",void 0),i([t.Output(),p("design:type",Object)],e.prototype,"rectangleComplete",void 0),e=i([t.Directive({selector:"agm-drawing-manager",exportAs:"agmDrawingManager"}),p("design:paramtypes",[t.NgZone])],e)}(),u=function(){function e(e){this._agmMap=e}var n,a;return e.prototype.ngAfterViewInit=function(){var e=this;this._agmMap.mapReady.pipe(o.first()).subscribe(function(t){return e.drawingManager.setMap(t)})},e.prototype.ngOnDestroy=function(){var e=this;this._agmMap.mapReady.pipe(o.first()).subscribe(function(){return e.drawingManager.setMap(null)})},i([t.Input("agmDrawingManager"),p("design:type",c)],e.prototype,"drawingManager",void 0),e=i([t.Directive({selector:"agm-map[agmDrawingManager]",exportAs:"matDrawingManagerTrigger"}),(n=0,a=t.Host(),function(e,t){a(e,t,n)}),p("design:paramtypes",[r.AgmMap])],e)}(),g=function(){function e(){}return e=i([t.NgModule({imports:[r.AgmCoreModule],declarations:[c,u],exports:[c,u]})],e)}();e.AgmDrawingManager=c,e.AgmDrawingManagerTrigger=u,e.AgmDrawingModule=g,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=agm-drawing.umd.min.js.map